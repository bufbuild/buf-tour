// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pet/v1/pet.proto

#include "pet/v1/pet.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace pet {
namespace v1 {
PROTOBUF_CONSTEXPR Pet::Pet(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pet_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_at_)*/nullptr
  , /*decltype(_impl_.pet_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PetDefaultTypeInternal() {}
  union {
    Pet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PetDefaultTypeInternal _Pet_default_instance_;
PROTOBUF_CONSTEXPR GetPetRequest::GetPetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pet_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPetRequestDefaultTypeInternal() {}
  union {
    GetPetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPetRequestDefaultTypeInternal _GetPetRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPetResponse::GetPetResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pet_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPetResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPetResponseDefaultTypeInternal() {}
  union {
    GetPetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPetResponseDefaultTypeInternal _GetPetResponse_default_instance_;
PROTOBUF_CONSTEXPR PutPetRequest::PutPetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pet_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PutPetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutPetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutPetRequestDefaultTypeInternal() {}
  union {
    PutPetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutPetRequestDefaultTypeInternal _PutPetRequest_default_instance_;
PROTOBUF_CONSTEXPR PutPetResponse::PutPetResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pet_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PutPetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutPetResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutPetResponseDefaultTypeInternal() {}
  union {
    PutPetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutPetResponseDefaultTypeInternal _PutPetResponse_default_instance_;
PROTOBUF_CONSTEXPR DeletePetRequest::DeletePetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pet_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeletePetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePetRequestDefaultTypeInternal() {}
  union {
    DeletePetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePetRequestDefaultTypeInternal _DeletePetRequest_default_instance_;
PROTOBUF_CONSTEXPR DeletePetResponse::DeletePetResponse(
    ::_pbi::ConstantInitialized) {}
struct DeletePetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePetResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePetResponseDefaultTypeInternal() {}
  union {
    DeletePetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePetResponseDefaultTypeInternal _DeletePetResponse_default_instance_;
}  // namespace v1
}  // namespace pet
static ::_pb::Metadata file_level_metadata_pet_2fv1_2fpet_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_pet_2fv1_2fpet_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_pet_2fv1_2fpet_2eproto = nullptr;

const uint32_t TableStruct_pet_2fv1_2fpet_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, _impl_.pet_type_),
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, _impl_.pet_id_),
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, _impl_.created_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::GetPetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pet::v1::GetPetRequest, _impl_.pet_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::GetPetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pet::v1::GetPetResponse, _impl_.pet_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetRequest, _impl_.pet_type_),
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetResponse, _impl_.pet_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::DeletePetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pet::v1::DeletePetRequest, _impl_.pet_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::DeletePetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::pet::v1::Pet)},
  { 10, -1, -1, sizeof(::pet::v1::GetPetRequest)},
  { 17, -1, -1, sizeof(::pet::v1::GetPetResponse)},
  { 24, -1, -1, sizeof(::pet::v1::PutPetRequest)},
  { 32, -1, -1, sizeof(::pet::v1::PutPetResponse)},
  { 39, -1, -1, sizeof(::pet::v1::DeletePetRequest)},
  { 46, -1, -1, sizeof(::pet::v1::DeletePetResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::pet::v1::_Pet_default_instance_._instance,
  &::pet::v1::_GetPetRequest_default_instance_._instance,
  &::pet::v1::_GetPetResponse_default_instance_._instance,
  &::pet::v1::_PutPetRequest_default_instance_._instance,
  &::pet::v1::_PutPetResponse_default_instance_._instance,
  &::pet::v1::_DeletePetRequest_default_instance_._instance,
  &::pet::v1::_DeletePetResponse_default_instance_._instance,
};

const char descriptor_table_protodef_pet_2fv1_2fpet_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020pet/v1/pet.proto\022\006pet.v1\032\032google/type/"
  "datetime.proto\"\222\001\n\003Pet\022*\n\010pet_type\030\001 \001(\016"
  "2\017.pet.v1.PetTypeR\007petType\022\025\n\006pet_id\030\002 \001"
  "(\tR\005petId\022\022\n\004name\030\003 \001(\tR\004name\0224\n\ncreated"
  "_at\030\004 \001(\0132\025.google.type.DateTimeR\tcreate"
  "dAt\"&\n\rGetPetRequest\022\025\n\006pet_id\030\001 \001(\tR\005pe"
  "tId\"/\n\016GetPetResponse\022\035\n\003pet\030\001 \001(\0132\013.pet"
  ".v1.PetR\003pet\"O\n\rPutPetRequest\022*\n\010pet_typ"
  "e\030\001 \001(\0162\017.pet.v1.PetTypeR\007petType\022\022\n\004nam"
  "e\030\002 \001(\tR\004name\"/\n\016PutPetResponse\022\035\n\003pet\030\001"
  " \001(\0132\013.pet.v1.PetR\003pet\")\n\020DeletePetReque"
  "st\022\025\n\006pet_id\030\001 \001(\tR\005petId\"\023\n\021DeletePetRe"
  "sponse*q\n\007PetType\022\030\n\024PET_TYPE_UNSPECIFIE"
  "D\020\000\022\020\n\014PET_TYPE_CAT\020\001\022\020\n\014PET_TYPE_DOG\020\002\022"
  "\022\n\016PET_TYPE_SNAKE\020\003\022\024\n\020PET_TYPE_HAMSTER\020"
  "\0042\313\001\n\017PetStoreService\0229\n\006GetPet\022\025.pet.v1"
  ".GetPetRequest\032\026.pet.v1.GetPetResponse\"\000"
  "\0229\n\006PutPet\022\025.pet.v1.PutPetRequest\032\026.pet."
  "v1.PutPetResponse\"\000\022B\n\tDeletePet\022\030.pet.v"
  "1.DeletePetRequest\032\031.pet.v1.DeletePetRes"
  "ponse\"\000BAZ\?github.com/bufbuild/buf-tour/"
  "petstore/gen/proto/go/pet/v1;petv1b\006prot"
  "o3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_pet_2fv1_2fpet_2eproto_deps[1] = {
  &::descriptor_table_google_2ftype_2fdatetime_2eproto,
};
static ::_pbi::once_flag descriptor_table_pet_2fv1_2fpet_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_pet_2fv1_2fpet_2eproto = {
    false, false, 882, descriptor_table_protodef_pet_2fv1_2fpet_2eproto,
    "pet/v1/pet.proto",
    &descriptor_table_pet_2fv1_2fpet_2eproto_once, descriptor_table_pet_2fv1_2fpet_2eproto_deps, 1, 7,
    schemas, file_default_instances, TableStruct_pet_2fv1_2fpet_2eproto::offsets,
    file_level_metadata_pet_2fv1_2fpet_2eproto, file_level_enum_descriptors_pet_2fv1_2fpet_2eproto,
    file_level_service_descriptors_pet_2fv1_2fpet_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_pet_2fv1_2fpet_2eproto_getter() {
  return &descriptor_table_pet_2fv1_2fpet_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_pet_2fv1_2fpet_2eproto(&descriptor_table_pet_2fv1_2fpet_2eproto);
namespace pet {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PetType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_pet_2fv1_2fpet_2eproto);
  return file_level_enum_descriptors_pet_2fv1_2fpet_2eproto[0];
}
bool PetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Pet::_Internal {
 public:
  static const ::google::type::DateTime& created_at(const Pet* msg);
};

const ::google::type::DateTime&
Pet::_Internal::created_at(const Pet* msg) {
  return *msg->_impl_.created_at_;
}
void Pet::clear_created_at() {
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
}
Pet::Pet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pet.v1.Pet)
}
Pet::Pet(const Pet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Pet* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.pet_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pet_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pet_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pet_id().empty()) {
    _this->_impl_.pet_id_.Set(from._internal_pet_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_created_at()) {
    _this->_impl_.created_at_ = new ::google::type::DateTime(*from._impl_.created_at_);
  }
  _this->_impl_.pet_type_ = from._impl_.pet_type_;
  // @@protoc_insertion_point(copy_constructor:pet.v1.Pet)
}

inline void Pet::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.pet_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pet_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pet_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Pet::~Pet() {
  // @@protoc_insertion_point(destructor:pet.v1.Pet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Pet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pet_id_.Destroy();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.created_at_;
}

void Pet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Pet::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.Pet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pet_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
  _impl_.pet_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pet_type(static_cast<::pet::v1::PetType>(val));
        } else
          goto handle_unusual;
        continue;
      // string pet_id = 2 [json_name = "petId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pet_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pet.v1.Pet.pet_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 3 [json_name = "name"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pet.v1.Pet.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.type.DateTime created_at = 4 [json_name = "createdAt"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Pet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.Pet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
  if (this->_internal_pet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_pet_type(), target);
  }

  // string pet_id = 2 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pet_id().data(), static_cast<int>(this->_internal_pet_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.Pet.pet_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pet_id(), target);
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.Pet.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // .google.type.DateTime created_at = 4 [json_name = "createdAt"];
  if (this->_internal_has_created_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.Pet)
  return target;
}

size_t Pet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.Pet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pet_id = 2 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pet_id());
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.type.DateTime created_at = 4 [json_name = "createdAt"];
  if (this->_internal_has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.created_at_);
  }

  // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
  if (this->_internal_pet_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_pet_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Pet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Pet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Pet::GetClassData() const { return &_class_data_; }


void Pet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Pet*>(&to_msg);
  auto& from = static_cast<const Pet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.Pet)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pet_id().empty()) {
    _this->_internal_set_pet_id(from._internal_pet_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_created_at()) {
    _this->_internal_mutable_created_at()->::google::type::DateTime::MergeFrom(
        from._internal_created_at());
  }
  if (from._internal_pet_type() != 0) {
    _this->_internal_set_pet_type(from._internal_pet_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Pet::CopyFrom(const Pet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.Pet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pet::IsInitialized() const {
  return true;
}

void Pet::InternalSwap(Pet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pet_id_, lhs_arena,
      &other->_impl_.pet_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pet, _impl_.pet_type_)
      + sizeof(Pet::_impl_.pet_type_)
      - PROTOBUF_FIELD_OFFSET(Pet, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[0]);
}

// ===================================================================

class GetPetRequest::_Internal {
 public:
};

GetPetRequest::GetPetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pet.v1.GetPetRequest)
}
GetPetRequest::GetPetRequest(const GetPetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pet_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pet_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pet_id().empty()) {
    _this->_impl_.pet_id_.Set(from._internal_pet_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pet.v1.GetPetRequest)
}

inline void GetPetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pet_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pet_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPetRequest::~GetPetRequest() {
  // @@protoc_insertion_point(destructor:pet.v1.GetPetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pet_id_.Destroy();
}

void GetPetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.GetPetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pet_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pet_id = 1 [json_name = "petId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pet_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pet.v1.GetPetRequest.pet_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.GetPetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string pet_id = 1 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pet_id().data(), static_cast<int>(this->_internal_pet_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.GetPetRequest.pet_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pet_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.GetPetRequest)
  return target;
}

size_t GetPetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.GetPetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pet_id = 1 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pet_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPetRequest::GetClassData() const { return &_class_data_; }


void GetPetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPetRequest*>(&to_msg);
  auto& from = static_cast<const GetPetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.GetPetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pet_id().empty()) {
    _this->_internal_set_pet_id(from._internal_pet_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPetRequest::CopyFrom(const GetPetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.GetPetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPetRequest::IsInitialized() const {
  return true;
}

void GetPetRequest::InternalSwap(GetPetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pet_id_, lhs_arena,
      &other->_impl_.pet_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[1]);
}

// ===================================================================

class GetPetResponse::_Internal {
 public:
  static const ::pet::v1::Pet& pet(const GetPetResponse* msg);
};

const ::pet::v1::Pet&
GetPetResponse::_Internal::pet(const GetPetResponse* msg) {
  return *msg->_impl_.pet_;
}
GetPetResponse::GetPetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pet.v1.GetPetResponse)
}
GetPetResponse::GetPetResponse(const GetPetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPetResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pet()) {
    _this->_impl_.pet_ = new ::pet::v1::Pet(*from._impl_.pet_);
  }
  // @@protoc_insertion_point(copy_constructor:pet.v1.GetPetResponse)
}

inline void GetPetResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPetResponse::~GetPetResponse() {
  // @@protoc_insertion_point(destructor:pet.v1.GetPetResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pet_;
}

void GetPetResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.GetPetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.pet_ != nullptr) {
    delete _impl_.pet_;
  }
  _impl_.pet_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPetResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pet.v1.Pet pet = 1 [json_name = "pet"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pet(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.GetPetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pet.v1.Pet pet = 1 [json_name = "pet"];
  if (this->_internal_has_pet()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pet(this),
        _Internal::pet(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.GetPetResponse)
  return target;
}

size_t GetPetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.GetPetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pet.v1.Pet pet = 1 [json_name = "pet"];
  if (this->_internal_has_pet()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pet_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPetResponse::GetClassData() const { return &_class_data_; }


void GetPetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPetResponse*>(&to_msg);
  auto& from = static_cast<const GetPetResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.GetPetResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pet()) {
    _this->_internal_mutable_pet()->::pet::v1::Pet::MergeFrom(
        from._internal_pet());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPetResponse::CopyFrom(const GetPetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.GetPetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPetResponse::IsInitialized() const {
  return true;
}

void GetPetResponse::InternalSwap(GetPetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.pet_, other->_impl_.pet_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[2]);
}

// ===================================================================

class PutPetRequest::_Internal {
 public:
};

PutPetRequest::PutPetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pet.v1.PutPetRequest)
}
PutPetRequest::PutPetRequest(const PutPetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutPetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.pet_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.pet_type_ = from._impl_.pet_type_;
  // @@protoc_insertion_point(copy_constructor:pet.v1.PutPetRequest)
}

inline void PutPetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.pet_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PutPetRequest::~PutPetRequest() {
  // @@protoc_insertion_point(destructor:pet.v1.PutPetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutPetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void PutPetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutPetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.PutPetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.pet_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutPetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pet_type(static_cast<::pet::v1::PetType>(val));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pet.v1.PutPetRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutPetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.PutPetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
  if (this->_internal_pet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_pet_type(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.PutPetRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.PutPetRequest)
  return target;
}

size_t PutPetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.PutPetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
  if (this->_internal_pet_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_pet_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutPetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutPetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutPetRequest::GetClassData() const { return &_class_data_; }


void PutPetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutPetRequest*>(&to_msg);
  auto& from = static_cast<const PutPetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.PutPetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_pet_type() != 0) {
    _this->_internal_set_pet_type(from._internal_pet_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutPetRequest::CopyFrom(const PutPetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.PutPetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutPetRequest::IsInitialized() const {
  return true;
}

void PutPetRequest::InternalSwap(PutPetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.pet_type_, other->_impl_.pet_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutPetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[3]);
}

// ===================================================================

class PutPetResponse::_Internal {
 public:
  static const ::pet::v1::Pet& pet(const PutPetResponse* msg);
};

const ::pet::v1::Pet&
PutPetResponse::_Internal::pet(const PutPetResponse* msg) {
  return *msg->_impl_.pet_;
}
PutPetResponse::PutPetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pet.v1.PutPetResponse)
}
PutPetResponse::PutPetResponse(const PutPetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutPetResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pet()) {
    _this->_impl_.pet_ = new ::pet::v1::Pet(*from._impl_.pet_);
  }
  // @@protoc_insertion_point(copy_constructor:pet.v1.PutPetResponse)
}

inline void PutPetResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PutPetResponse::~PutPetResponse() {
  // @@protoc_insertion_point(destructor:pet.v1.PutPetResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutPetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pet_;
}

void PutPetResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutPetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.PutPetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.pet_ != nullptr) {
    delete _impl_.pet_;
  }
  _impl_.pet_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutPetResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pet.v1.Pet pet = 1 [json_name = "pet"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pet(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutPetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.PutPetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pet.v1.Pet pet = 1 [json_name = "pet"];
  if (this->_internal_has_pet()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pet(this),
        _Internal::pet(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.PutPetResponse)
  return target;
}

size_t PutPetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.PutPetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pet.v1.Pet pet = 1 [json_name = "pet"];
  if (this->_internal_has_pet()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pet_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutPetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutPetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutPetResponse::GetClassData() const { return &_class_data_; }


void PutPetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutPetResponse*>(&to_msg);
  auto& from = static_cast<const PutPetResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.PutPetResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pet()) {
    _this->_internal_mutable_pet()->::pet::v1::Pet::MergeFrom(
        from._internal_pet());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutPetResponse::CopyFrom(const PutPetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.PutPetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutPetResponse::IsInitialized() const {
  return true;
}

void PutPetResponse::InternalSwap(PutPetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.pet_, other->_impl_.pet_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutPetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[4]);
}

// ===================================================================

class DeletePetRequest::_Internal {
 public:
};

DeletePetRequest::DeletePetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pet.v1.DeletePetRequest)
}
DeletePetRequest::DeletePetRequest(const DeletePetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeletePetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pet_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pet_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pet_id().empty()) {
    _this->_impl_.pet_id_.Set(from._internal_pet_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pet.v1.DeletePetRequest)
}

inline void DeletePetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pet_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pet_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pet_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeletePetRequest::~DeletePetRequest() {
  // @@protoc_insertion_point(destructor:pet.v1.DeletePetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeletePetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pet_id_.Destroy();
}

void DeletePetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeletePetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.DeletePetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pet_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pet_id = 1 [json_name = "petId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pet_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pet.v1.DeletePetRequest.pet_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeletePetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.DeletePetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string pet_id = 1 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pet_id().data(), static_cast<int>(this->_internal_pet_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.DeletePetRequest.pet_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pet_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.DeletePetRequest)
  return target;
}

size_t DeletePetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.DeletePetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pet_id = 1 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pet_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeletePetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePetRequest::GetClassData() const { return &_class_data_; }


void DeletePetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeletePetRequest*>(&to_msg);
  auto& from = static_cast<const DeletePetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.DeletePetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pet_id().empty()) {
    _this->_internal_set_pet_id(from._internal_pet_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePetRequest::CopyFrom(const DeletePetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.DeletePetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePetRequest::IsInitialized() const {
  return true;
}

void DeletePetRequest::InternalSwap(DeletePetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pet_id_, lhs_arena,
      &other->_impl_.pet_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[5]);
}

// ===================================================================

class DeletePetResponse::_Internal {
 public:
};

DeletePetResponse::DeletePetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:pet.v1.DeletePetResponse)
}
DeletePetResponse::DeletePetResponse(const DeletePetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeletePetResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pet.v1.DeletePetResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePetResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeletePetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace pet
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pet::v1::Pet*
Arena::CreateMaybeMessage< ::pet::v1::Pet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::Pet >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::GetPetRequest*
Arena::CreateMaybeMessage< ::pet::v1::GetPetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::GetPetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::GetPetResponse*
Arena::CreateMaybeMessage< ::pet::v1::GetPetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::GetPetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::PutPetRequest*
Arena::CreateMaybeMessage< ::pet::v1::PutPetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::PutPetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::PutPetResponse*
Arena::CreateMaybeMessage< ::pet::v1::PutPetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::PutPetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::DeletePetRequest*
Arena::CreateMaybeMessage< ::pet::v1::DeletePetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::DeletePetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::DeletePetResponse*
Arena::CreateMaybeMessage< ::pet::v1::DeletePetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::DeletePetResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
